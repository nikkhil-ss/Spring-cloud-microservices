package com.example.demo.resources;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.example.demo.model.CatalogItem;
import com.example.demo.model.Movie;
import com.example.demo.model.Rating;
import com.example.demo.model.UserRating;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

@RestController
@RequestMapping("/catalog")

public class MovieCatalogResource {

	@Autowired
	private RestTemplate restTemplate;
	
//	@Autowired
//	private WebClient.Builder webClientBuilder;
	
	@HystrixCommand(fallbackMethod = "getFallbackCatalog")
	@GetMapping("/{userId}")
	List<CatalogItem> getCatalogItem(@PathVariable("userId") String userId) {

		

		UserRating ratingsList=restTemplate.getForObject("http://movie-ratings-service/ratingsdata/users/"+userId, UserRating.class);
		

		return ratingsList.getUserRating().stream().map(ratings -> {

			//using rest template
			Movie movie = restTemplate.getForObject("http://movie-info-service/movies/" + ratings.getMovieId(),Movie.class);
			
			
			
//			 using webClientBuilder
			/*
			  Movie movie =webClientBuilder.build()
			   .get()
			  .uri("http://localhost:8082/movies/" + ratings.getMovieId())
			  .retrieve()
			  .bodyToMono(Movie.class)
			  .block();
			 */
			
			return new CatalogItem( movie.getName()+" Dark of the moon",ratings.getMovieId(), ratings.getRating());
//
		})

				.collect(Collectors.toList());

	}
	
	List<CatalogItem> getFallbackCatalog(@PathVariable("userId") String userId){
		return Arrays.asList(new CatalogItem("NO Moovie",null,0));
	}
}
