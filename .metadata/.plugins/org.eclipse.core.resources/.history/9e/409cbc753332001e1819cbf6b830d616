package com.example.demo.resources;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.example.demo.model.CatalogItem;
import com.example.demo.model.Movie;
import com.example.demo.model.Rating;
import com.example.demo.model.UserRating;
import com.example.demo.service.MovieInfo;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

@RestController
@RequestMapping("/catalog")

public class MovieCatalogResource {

	@Autowired
	private RestTemplate restTemplate;
	
	@Autowired
	private MovieInfo movieInfo;

//	@Autowired
//	private WebClient.Builder webClientBuilder;

	@GetMapping("/{userId}")
	List<CatalogItem> getCatalogItem(@PathVariable("userId") String userId) {

		UserRating ratingsList = getUserRating(userId);

		return ratingsList.getUserRating().stream().map(ratings -> 
			movieInfo.getCatalogItem(ratings))
			.collect(Collectors.toList());

//			 using webClientBuilder
			/*
			 * Movie movie =webClientBuilder.build() .get()
			 * .uri("http://localhost:8082/movies/" + ratings.getMovieId()) .retrieve()
			 * .bodyToMono(Movie.class) .block();
			 */


	


	}

	

	@HystrixCommand(fallbackMethod = "getFallbackUserRating")
	private UserRating getUserRating(String userId) {
		return restTemplate.getForObject("http://movie-ratings-service/ratingsdata/users/" + userId, UserRating.class);
	}

	private UserRating getFallbackUserRating(@PathVariable("userId") String userId) {
		UserRating userRating = new UserRating();
		userRating.setUserId(userId);
		userRating.setUserRating(Arrays.asList(new Rating("0", 0)));

		return userRating;

	}
}
